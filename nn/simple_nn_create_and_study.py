# -*- coding: utf-8 -*-
"""Simple_nn_create_and_study.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KNYkwv587KwmkJ-d_RjCpWDbFRc5-DhL
"""

from google.colab import drive
drive.mount('/content/drive')

file_path = '/content/drive/MyDrive/ds/base_nn/addition_data.csv'

import numpy as np
import pandas as pd
from tensorflow import keras
from tensorflow.keras import layers

# === 1. Генерація даних та збереження у CSV ===
def generate_and_save_data(filename=file_path, n_samples=10000):
    x1 = np.random.randint(1, 11, size=(n_samples,))
    x2 = np.random.randint(1, 11, size=(n_samples,))
    y = x1 + x2
    df = pd.DataFrame({'x1': x1, 'x2': x2, 'y': y})
    df.to_csv(filename, index=False)
    print(f"Data saved to {filename}")

generate_and_save_data()

import numpy as np
import pandas as pd
from tensorflow import keras
from tensorflow.keras import layers


# === 2. Завантаження даних з CSV ===
def load_data(filename=file_path):
    df = pd.read_csv(filename)
    X = df[['x1', 'x2']].values
    y = df['y'].values
    return X, y

# === 3. Створення та навчання моделі ===
def build_and_train_model(X, y):
    model = keras.Sequential([
        layers.Dense(32, activation='relu', input_shape=(2,)),
        layers.Dense(32, activation='relu'),
        layers.Dense(1)
    ])
    model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])
    model.fit(X, y, epochs=30, batch_size=32, validation_split=0.2)
    return model

# === 4. Виконання ===
# Генеруємо та зберігаємо дані
generate_and_save_data()

# Завантажуємо дані
X, y = load_data()

# Створюємо та навчаємо модель
model = build_and_train_model(X, y)

# Перевірка передбачення
sample = np.array([[3, 7]])  # Очікуємо 10


prediction = model.predict(sample)


print(f"Prediction for {sample[0]} is: {prediction[0][0]:.2f}")